!$Revision: 2.1 $
!$Date: 2010/02/10 16:01:54 $
!$RCSfile: edesolv.inp,v $

! energy.inp:
! calculate statistics for all energy terms
!
!     ***********************************
!     * Authors and copyright:           *
!     * Alexandre Bonvin, Utrecht        *
!     * No warranty implied or expressed *
!     * All rights reserved              *
!     * (adapted from the ARIA distribu- *
!     * tion of Nilges and Linge)        *
!     ************************************

@RUN:protocols/initialize.cns(iteration=$iteration;)

@NEWIT:iteration.cns(iteration=$iteration;)

@RUN:run.cns(
iteration =$iteration;
filenames =$filenames;
data      =$data;
iterations=$iterations;
saprotocol=$saprotocol;
refine    =$refine;
toppar    =$toppar;
analysis  =$analysis;
)
set message=on echo=on end

!reads in structure, coordinates and parameter files
@RUN:protocols/read_struc.cns

@PREVIT:file.cns(filenames=$filenames)
evaluate ($file = $filenames.bestfile_1)
coor @@$file

delete sele=(not(known)) end

set display NEWIT:analysis/edesolv.disp end

display #Complex statistics
display #
display #Desolvation energy

evaluate ($sum_desolv = 0)
evaluate ($sumsq_desolv = 0)

@PREVIT:file.cns(filenames=$filenames)

{====>} {* define ASA-based solvation parameters *}
inline @RUN:protocols/def_solv_param.cns

evaluate ($count = 1)
evaluate ($nstruc1 = 0)
while ($count le $Iterations.anastruc) loop main
   evaluate ($file = $filenames.bestfile_$count)
   coor init end
   if ($file ne "") then
     coor @@$file
     evaluate ($nstruc1 = $nstruc1 + 1)

     evaluate ($nchain1 = 1)
     evaluate ($saafree = 0)
     evaluate ($esolfree = 0)
     while ($nchain1 <= $data.ncomponents) loop nloop1
       {====>} {* buried surface area *}
       do (rmsd = 0) (all)
       do (store2 = 0) (all)
       surface mode=access accu=0.075 rh2o=1.4 sele=(segid $Toppar.prot_segid_$nchain1) end
       do (store2 = rmsd * store1) (segid $Toppar.prot_segid_$nchain1 and not ((resn WAT or resn HOH or resn TIP3) or resn DMS))
       show sum (store2) (segid $Toppar.prot_segid_$nchain1 and not ((resn WAT or resn HOH or resn TIP3) or resn DMS))
       evaluate ($esolfree = $esolfree + $result)
       evaluate ($nchain1 = $nchain1 + 1)
     end loop nloop1

     do (rmsd = 0) (all)
     do (store2 = 0) (all)
     surface mode=access accu=0.075 rh2o=1.4 sele=(not ((resn WAT or resn HOH or resn TIP3) or resn DMS)) end
     do (store2 = rmsd * store1) (not ((resn WAT or resn HOH or resn TIP3) or resn DMS))
     show sum (store2) (not ((resn WAT or resn HOH or resn TIP3) or resn DMS))
     evaluate ($esolcplx = $result)
     evaluate ($edesolv = ($esolcplx - $esolfree))
     evaluate ($sum_desolv = $sum_desolv + $edesolv)
     evaluate ($sumsq_desolv = $sumsq_desolv + $edesolv**2)

     display # $file $edesolv

   end if
   if ($count ge $Iterations.anastruc) then exit loop main end if
   evaluate ($count = $count + 1)
end loop main

evaluate ($mean_desolv = $sum_desolv / $nstruc1)
evaluate ($stdev_desolv = sqrt(($sumsq_desolv - $nstruc1*$mean_desolv**2)/ $nstruc1))

display # mean values
display # desolv    $mean_desolv (+/- $stdev_desolv ) [kcal/Mol]

stop
