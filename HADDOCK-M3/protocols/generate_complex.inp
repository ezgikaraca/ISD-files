!$Revision: 2.1 $
!$Date: 2010/02/10 16:01:54 $
!$RCSfile: generate_complex.inp,v $

!     ****************************************
!     * Authors and copyright:               *
!     * Alexandre Bonvin, Utrecht University *
!     * No warranty implied or expressed     *
!     * All rights reserved                  *
!     ****************************************


@RUN:protocols/initialize.cns(iteration=$iteration;)
@RUN:begin/iteration.cns(iteration=$iteration;)
@RUN:run.cns(
iteration =$iteration;
filenames =$filenames;
Data      =$Data;
iterations=$iterations;
saprotocol=$saprotocol;
refine    =$refine;
toppar    =$toppar;
analysis  =$analysis;)

! Read in topologies
eval($nchain1 = 0)
while ($nchain1 < $data.ncomponents) loop cloop1
  eval($nchain1 = $nchain1 + 1)
  evaluate($psf_infile_$nchain1= "RUN:begin/" + $Toppar.prot_root_$nchain1 + ".psf")
  structure
    @@$psf_infile_$nchain1
  end
end loop cloop1

! Write structures of complexes
evaluate ($nstruc = 1)
evaluate ($nline = 0)

for $molecule in ( @@RUN:begin/combinations.list ) loop write_complexes
	evaluate ($nline = $nline + 1)
	evaluate ($nummod = mod($nline, $data.ncomponents))

	coor @@$molecule
	
	if ($nummod eq 0) then
	  if ($saprotocol.randorien eq true) then
	    @RUN:protocols/separate.cns(Data=$Data; Toppar=$Toppar)
	  end if

	  evaluate ($coorfile_$nstruc = "RUN:begin/" + $Filenames.fileroot + "_" + encode($nstruc) + ".pdb")

    do (q=1) (all)
    do (b=10) (all)
	  write coor output=$coorfile_$nstruc end
	  evaluate ($nstruc = $nstruc + 1)
	end if

end loop write_complexes

! Write complex topology (one is enough)
evaluate ($structurefile = "RUN:begin/" + $Filenames.fileroot + ".psf")
write structure output=$structurefile end
stop   
